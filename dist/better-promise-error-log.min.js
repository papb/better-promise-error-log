!function(){return function e(r,n,o){function t(a,i){if(!n[a]){if(!r[a]){var c="function"==typeof require&&require;if(!i&&c)return c(a,!0);if(s)return s(a,!0);var l=new Error("Cannot find module '"+a+"'");throw l.code="MODULE_NOT_FOUND",l}var u=n[a]={exports:{}};r[a][0].call(u.exports,function(e){return t(r[a][1][e]||e)},u,u.exports,e,r,n,o)}return n[a].exports}for(var s="function"==typeof require&&require,a=0;a<o.length;a++)t(o[a]);return t}}()({1:[function(e,r,n){"use strict";const o=e("jsonify-error");window.addEventListener("unhandledrejection",function(e){var r=void 0;if(e.reason&&(r=e.reason),e.detail&&e.detail.reason&&(r=e.detail.reason),r){var n=o(r),t="Unhandled Error in Promise: "+JSON.stringify(n,null,2);console.error(t)}else console.error("better-promise-error-log error: unable to find error cause. Please open an issue on github: https://github.com/papb/better-promise-error-log/issues")})},{"jsonify-error":2}],2:[function(e,r,n){"use strict";function o(e){if(!(e instanceof Error))return e;const r={};r.name=e.name||"<no name available>",r.className=e.constructor.name||"<no class name available>",r.message=e.message||"<no message available>",r.superclasses=function(e){const r=[];let n=Object.getPrototypeOf(e);for(null!==n&&(n=Object.getPrototypeOf(n));null!==n;)r.push(n.constructor.name),n=Object.getPrototypeOf(n);return r}(e),r.enumerableFields={};for(let n in e)r.enumerableFields[n]=e[n];return"string"==typeof e.stack&&e.stack.length>0?r.stack=e.stack.split("\n").map(e=>e.replace(/^\s+/,"")):r.stack=e.stack||"<no stack trace available>",r}function t(e){return e.map(e=>e instanceof Error?o(e):e)}let s=!1;o.overrideConsole=function(){if(s)return;s=!0;const e=console.log.bind(console),r=console.warn.bind(console),n=console.error.bind(console);console.log=function(...r){e(...t(r))},console.warn=function(...e){r(...t(e))},console.error=function(...e){n(...t(e))}},r.exports=o},{}]},{},[1]);