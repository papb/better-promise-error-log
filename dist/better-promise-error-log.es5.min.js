!function(){return function r(e,o,t){function n(i,c){if(!o[i]){if(!e[i]){var a="function"==typeof require&&require;if(!c&&a)return a(i,!0);if(s)return s(i,!0);var u=new Error("Cannot find module '"+i+"'");throw u.code="MODULE_NOT_FOUND",u}var l=o[i]={exports:{}};e[i][0].call(l.exports,function(r){return n(e[i][1][r]||r)},l,l.exports,r,e,o,t)}return o[i].exports}for(var s="function"==typeof require&&require,i=0;i<t.length;i++)n(t[i]);return n}}()({1:[function(r,e,o){"use strict";var t=r("jsonify-error");window.addEventListener("unhandledrejection",function(r){var e=void 0;r.reason&&(e=r.reason),r.detail&&r.detail.reason&&(e=r.detail.reason),e?e instanceof Error?console.error("Unhandled error in promise:",t(e)):console.error("Unhandled rejection in promise:",e):console.error("better-promise-error-log error: unable to find error cause. Please open an issue on github: https://github.com/papb/better-promise-error-log/issues")})},{"jsonify-error":2}],2:[function(r,e,o){"use strict";const t=r("./lib/jsonify-error"),n=r("./lib/override-console"),s=r("./lib/override-error-methods"),i=r("./lib/log"),c=r("./lib/to-string");e.exports=t,e.exports.overrideConsole=n,e.exports.overrideErrorMethods=s,e.exports.log=i,e.exports.asString=c},{"./lib/jsonify-error":6,"./lib/log":3,"./lib/override-console":7,"./lib/override-error-methods":8,"./lib/to-string":9}],3:[function(r,e,o){"use strict";const t=r("./../map-arg");e.exports=function(r){console.error(t(r))}},{"./../map-arg":4}],4:[function(r,e,o){"use strict";const t=r("./../jsonify-error");e.exports=function(r){return r instanceof Error?t(r):r}},{"./../jsonify-error":6}],5:[function(r,e,o){"use strict";e.exports=function(r){const e=[];let o=Object.getPrototypeOf(r);for(null!==o&&(o=Object.getPrototypeOf(o));null!==o;)e.push(o.constructor.name),o=Object.getPrototypeOf(o);return e}},{}],6:[function(r,e,o){"use strict";const t=r("./get-superclasses");e.exports=function(r){if(!(r instanceof Error))return r;const e={};e.name=r.name||"<no name available>",e.className=r.constructor.name||"<no class name available>",e.message=r.message||"<no message available>",e.superclasses=t(r),e.enumerableFields={};for(const o in r)"function"!=typeof r[o]&&(e.enumerableFields[o]=r[o]);return"string"==typeof r.stack&&r.stack.length>0?e.stack=r.stack.split("\n").map(r=>r.replace(/^\s+/,"")).filter(r=>r):e.stack=r.stack||"<no stack trace available>",e}},{"./get-superclasses":5}],7:[function(r,e,o){"use strict";const t=r("./map-arg"),n=["log","debug","info","warn","error"];let s=!1;e.exports=function(){if(s)return;s=!0;const r={};for(const e of n)console[e]&&(r[e]=console[e].bind(console),console[e]=function(...o){r[e](...o.map(t))})}},{"./map-arg":4}],8:[function(r,e,o){"use strict";const t=r("./jsonify-error"),n=r("./to-string");e.exports=function(){Error.prototype.toJSON=function(){return t(this)},Error.prototype.toString=function(r=4){return n(this,r)}}},{"./jsonify-error":6,"./to-string":9}],9:[function(r,e,o){"use strict";const t=r("./jsonify-error");e.exports=function(r,e=4){if(!(r instanceof Error))throw new TypeError("jsonifyError.toString() error: First argument must be instance of Error.");const o=t(r);return`${o.className}: ${o.message} ${JSON.stringify(o,null,e)}`}},{"./jsonify-error":6}]},{},[1]);