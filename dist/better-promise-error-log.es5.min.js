!function(){return function r(o,e,t){function n(i,c){if(!e[i]){if(!o[i]){var a="function"==typeof require&&require;if(!c&&a)return a(i,!0);if(s)return s(i,!0);var u=new Error("Cannot find module '"+i+"'");throw u.code="MODULE_NOT_FOUND",u}var l=e[i]={exports:{}};o[i][0].call(l.exports,function(r){return n(o[i][1][r]||r)},l,l.exports,r,o,e,t)}return e[i].exports}for(var s="function"==typeof require&&require,i=0;i<t.length;i++)n(t[i]);return n}}()({1:[function(r,o,e){"use strict";var t=r("jsonify-error");window.addEventListener("unhandledrejection",function(r){var o=void 0;r.reason&&(o=r.reason),r.detail&&r.detail.reason&&(o=r.detail.reason),o?console.error("Unhandled Error in Promise: "+t.asString(o)):console.error("better-promise-error-log error: unable to find error cause. Please open an issue on github: https://github.com/papb/better-promise-error-log/issues")})},{"jsonify-error":2}],2:[function(r,o,e){"use strict";const t=r("./lib/jsonify-error"),n=r("./lib/override-console"),s=r("./lib/override-error-methods"),i=r("./lib/log"),c=r("./lib/to-string");o.exports=t,o.exports.overrideConsole=n,o.exports.overrideErrorMethods=s,o.exports.log=i,o.exports.asString=c},{"./lib/jsonify-error":5,"./lib/log":3,"./lib/override-console":6,"./lib/override-error-methods":7,"./lib/to-string":8}],3:[function(r,o,e){"use strict";const t=r("./../to-string");o.exports=function(r,o=4){console.error(t(r,o))}},{"./../to-string":8}],4:[function(r,o,e){"use strict";o.exports=function(r){const o=[];let e=Object.getPrototypeOf(r);for(null!==e&&(e=Object.getPrototypeOf(e));null!==e;)o.push(e.constructor.name),e=Object.getPrototypeOf(e);return o}},{}],5:[function(r,o,e){"use strict";const t=r("./get-superclasses");o.exports=function(r){if(!(r instanceof Error))return r;const o={};o.name=r.name||"<no name available>",o.className=r.constructor.name||"<no class name available>",o.message=r.message||"<no message available>",o.superclasses=t(r),o.enumerableFields={};for(const e in r)"function"!=typeof r[e]&&(o.enumerableFields[e]=r[e]);return"string"==typeof r.stack&&r.stack.length>0?o.stack=r.stack.split("\n").map(r=>r.replace(/^\s+/,"")):o.stack=r.stack||"<no stack trace available>",o}},{"./get-superclasses":4}],6:[function(r,o,e){"use strict";const t=r("./to-string");function n(r){return r.map(r=>r instanceof Error?t(r):r)}const s=["log","debug","info","warn","error"];let i=!1;o.exports=function(){if(i)return;i=!0;const r={};for(const o of s)console[o]&&(r[o]=console[o].bind(console),console[o]=function(...e){r[o](...n(e))})}},{"./to-string":8}],7:[function(r,o,e){"use strict";const t=r("./jsonify-error"),n=r("./to-string");o.exports=function(){Error.prototype.toJSON=function(){return t(this)},Error.prototype.toString=function(r=4){return n(this,r)}}},{"./jsonify-error":5,"./to-string":8}],8:[function(r,o,e){"use strict";const t=r("./jsonify-error");o.exports=function(r,o=4){if(!(r instanceof Error))throw new TypeError("jsonifyError.toString() error: First argument must be instance of Error.");const e=t(r);return`${e.className}: ${e.message} ${JSON.stringify(e,null,o)}`}},{"./jsonify-error":5}]},{},[1]);